- name: Set Install Messages
  set_fact:
   successfully_installed: "Creating namespace gloo-system... Done.\nStarting Gloo Edge installation...\n\nGloo Edge was successfully installed!"
   already_installed_msg: "Error: installing gloo edge in gateway mode: Gloo has already been installed to namespace gloo-system"

- name: "Install istioctl"
  become: no
  ansible.builtin.shell: |
    curl -sL https://run.solo.io/gloo/install | sh
  args:
    creates: "/home/{{ ansible_user }}/.gloo"
  environment:
    GLOO_EDGE_VERSION: "{{ gloo_edge_version }}"
  register: glooctl_download

- name: Set glooctl bin
  become: no
  set_fact:
     glooctl_binary: "/home/{{ ansible_user }}/.gloo/bin/glooctl"

- name: Install Gloo Edge in Gateway Mode
  become: no
  ansible.builtin.shell: |
     $GLOOCTL_BINARY install gateway \
       --version=$GLOO_EDGE_VERSION
  environment:
    GLOOCTL_BINARY: "/home/{{ ansible_user }}/.gloo/bin/glooctl"
    GLOO_EDGE_VERSION: "{{ gloo_edge_version }}"
  ignore_errors: true
  changed_when: glooctl_install.stdout is defined and glooctl_install.stdout == successfully_installed 
  register: glooctl_install

- fail:
   msg: glooctl_install.stderr
  when: glooctl_install.stderr is defined and glooctl_install.stderr != already_installed_msg

- name: "Check if glooctl is in $PATH"
  become: no
  lineinfile:
    state: absent
    path: "/home/{{ ansible_user }}/.bashrc"
    regexp: '^#Add glooctl to PATH'
  check_mode: true
  changed_when: false # This just makes things look prettier in the logs
  register: check_glooctl_in_path

# - debug:
#     var: check_glooctl_in_path
    
- name: "Add glooctl to $PATH"
  become: no
  ansible.builtin.lineinfile:
    state: present
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "#Add glooctl to PATH\nexport PATH=/home/{{ ansible_user }}/.gloo/bin:$PATH"
  when: check_glooctl_in_path.found == 0