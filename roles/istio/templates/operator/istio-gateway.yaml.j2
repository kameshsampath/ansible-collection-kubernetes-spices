#jinja2: lstrip_blocks: "True"
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: ingress-gateway-{{ kubernetes_spices_istio_revision }}
  namespace: {{ kubernetes_spices_istio_gateways_namespace }}
spec:
  # only the control plane components are installed (https://istio.io/latest/docs/setup/additional-setup/config-profiles/)
  profile: empty
  hub: {{ kubernetes_spices_istio_image_hub }}
  tag: {{ kubernetes_spices_istio_version }}
  revision: {{ kubernetes_spices_istio_revision }}
  
  components:
    ingressGateways:
    # enable the default ingress gateway
    - name: istio-ingressgateway
      # deploy to its own namespace
      namespace: istio-gateways
      enabled: true
      label:
        istio: ingressgateway
        app: istio-ingressgateway
        {% if kubernetes_spices_gloo_mesh_cluster_name is defined %}
        # matches spec.values.global.network in istiod deployment
        topology.istio.io/network: {{ kubernetes_spices_gloo_mesh_cluster_name }}
        {% endif %}
      k8s:
        env:
          # Required by Gloo Mesh for east/west routing
          - name: ISTIO_META_ROUTER_MODE
            value: "sni-dnat"
        service:
          type: LoadBalancer
          ports:
            # health check port (required to be first for aws elbs)
            - name: status-port
              port: 15021
              targetPort: 15021
            # main http ingress port
            - port: 80
              targetPort: 8080
              name: http2
            # main https ingress port
            - port: 443
              targetPort: 8443
              name: https
            # Port for gloo-mesh multi-cluster mTLS passthrough (Required for Gloo Mesh east/west routing)
            - port: 15443
              targetPort: 15443
              # Gloo Mesh looks for this default name 'tls' on an ingress gateway
              name: tls
  values:
    # https://istio.io/v1.5/docs/reference/config/installation-options/#global-options
    global:
      {% if kubernetes_spices_gloo_mesh_cluster_name is defined %}
      # needed for connecting VirtualMachines to the mesh
      network: {{ kubernetes_spices_gloo_mesh_cluster_name }}
      # needed for annotating istio metrics with cluster (should match trust domain and GLOO_MESH_CLUSTER_NAME)
      multiCluster:
        clusterName: {{ kubernetes_spices_gloo_mesh_cluster_name }}
     {% endif %}