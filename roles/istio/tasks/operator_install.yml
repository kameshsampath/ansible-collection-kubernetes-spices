---
- name: "Istio Kube Context"
  debug:
    var: kubernetes_spices_istio_k8s_context

- name: "Fail if the Istio kube context is not defined"
  fail:
    msg: "Istio Kube Context is not defined, please set the variable 'kubernetes_spices_istio_k8s_context' to kubernetes context where you wish to have Gitea installed "
  when: kubernetes_spices_istio_k8s_context is not defined 

- name: "Fail when version istio info does not exist"
  fail:
    msg: "Istio Version not available"
  when: kubernetes_spices_istio_version is not defined 

- name: "Set Istio Revision Fact"
  set_fact:
    kubernetes_spices_istio_revision: "{{ kubernetes_spices_istio_version | kameshsampath.kubernetes_spices.version_to_revision }}"

- name: "Istio Version"
  debug: 
    var: kubernetes_spices_istio_version

- name: "Istio Revision"
  debug: 
    var: kubernetes_spices_istio_revision

- name: "Set Istio Revision Work Directory"
  set_fact:
    kubernetes_spices_istio_revision_work_dir: "{{ work_dir }}/{{ kubernetes_spices_istio_revision }}"

- name: "Ensure Istio Revision Work Directory"
  ansible.builtin.file:
    state: directory
    path: "{{ kubernetes_spices_istio_revision_work_dir }}"
    mode: "0700"

- name: "Create istio operator Helm Values"
  ansible.builtin.template:
    src: "operator/istio_operator_values.yaml.j2"
    dest: "{{ kubernetes_spices_istio_revision_work_dir }}/istio_operator_values.yaml"
  register: istio_helm_values_file
  
- name: "Set Istio Helm Value File Facts"
  set_fact:
    kubernetes_spices_istio_operator_helm_values_files: "{{ kubernetes_spices_istiod_helm_values_files + [istio_helm_values_file.dest] }}"
    
- name: "Download Istio (macos)"
  get_url:
    url: "https://github.com/istio/istio/releases/download/{{ kubernetes_spices_istio_version }}/istio-{{ kubernetes_spices_istio_version }}-osx.tar.gz"
    checksum: "sha256:https://github.com/istio/istio/releases/download/{{ kubernetes_spices_istio_version }}/istio-{{ kubernetes_spices_istio_version }}-osx.tar.gz.sha256"
    dest: "/tmp/istio-{{ kubernetes_spices_istio_version }}.tar.gz"
  when: ansible_os_family == 'Darwin'

- name: "Download Istio (linux)"
  ansible.builtin.get_url:
    url: "https://github.com/istio/istio/releases/download/{{ kubernetes_spices_istio_version }}/istio-{{ kubernetes_spices_istio_version }}-linux-amd64.tar.gz"
    checksum: "sha256:https://github.com/istio/istio/releases/download/{{ kubernetes_spices_istio_version }}/istio-{{ kubernetes_spices_istio_version }}-linux-amd64.tar.gz.sha256"
    dest: "/tmp/istio-{{ kubernetes_spices_istio_version }}.tar.gz"
    mode: "0755"
  when: ansible_os_family == 'RedHat' or ansible_os_family == 'Debian'
  
- name: "Extract Istio"
  unarchive:
    src: "/tmp/istio-{{ kubernetes_spices_istio_version }}.tar.gz"
    dest: "{{ work_dir }}/{{ kubernetes_spices_istio_revision }}"
    remote_src: yes

- name: "Generate Istio Operator Templates"
  kubernetes.core.helm_template:
    chart_ref: "{{ kubernetes_spices_istio_revision_work_dir }}/istio-{{ kubernetes_spices_istio_version }}/manifests/charts/istio-operator"
    include_crds: yes
    values_files: "{{ kubernetes_spices_istio_operator_helm_values_files }}"
  register: istio_operator_install_template

- name: "Generate Istio Control Plane Deployment"
  ansible.builtin.template:
    src: operator/istiod.yaml.j2
    dest: "{{ kubernetes_spices_istio_revision_work_dir }}/control-plane.yaml"
  register: kubernetes_spices_controlpane_manifest_file
  when: kubernetes_spices_controlpane_manifest is not defined 
    
- name: "Set Control Plane Manifest"
  set_fact:
    kubernetes_spices_controlpane_manifest: "{{ kubernetes_spices_istio_revision_work_dir }}/control-plane.yaml"
  when: kubernetes_spices_controlpane_manifest is not defined 

- name: "Generate Istio Gateway Deployment"
  ansible.builtin.template:
    src: operator/istio-gateway.yaml.j2
    dest: "{{ kubernetes_spices_istio_revision_work_dir }}/ingress-gateway.yaml"
  register: kubernetes_spices_gateways_manifest_file
  when:  kubernetes_spices_gateways_manifest is not defined

- name: "Set Istio Gateways Manifest"
  set_fact:
    kubernetes_spices_gateways_manifest: "{{ kubernetes_spices_istio_revision_work_dir + '/ingress-gateway.yaml' }}"
  when:  kubernetes_spices_gateways_manifest is not defined
  
#- debug:
#    var: istio_operator_install_template
    
- name: "Create Istio Namespaces"
  kubernetes.core.k8s:
    context: "{{ kubernetes_spices_istio_k8s_context }}"
    state: present
    definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: "{{ kube_istio_ns_item }}"
      spec:
        finalizers:
          - kubernetes
  loop:
    - "{{ kubernetes_spices_istio_operator_namespace }}"
    - "{{ kubernetes_spices_istio_namespace  }}"
    - "{{ kubernetes_spices_istio_gateways_namespace }}"
  loop_control:
     loop_var: kube_istio_ns_item

- name: "Write Operator templates to file"
  copy:
    dest: "{{ kubernetes_spices_istio_revision_work_dir }}/operator.yaml"
    content: "{{ istio_operator_install_template.stdout }}"

- name: "Install Operator"
  kubernetes.core.k8s:
    state: present
    src: "{{ kubernetes_spices_istio_revision_work_dir }}/operator.yaml"
    namespace: "{{ kubernetes_spices_istio_operator_namespace }}"
    context: "{{ kubernetes_spices_istio_k8s_context }}"

- name: "Wait for Istio Operator to be ready"
  include: utils/status_check.yml
  vars:
    deployment_name: "istio-operator-{{ kubernetes_spices_istio_revision }}"
    deployment_namespace: "{{ kubernetes_spices_istio_operator_namespace }}"
    deployment_context: "{{ kubernetes_spices_istio_k8s_context }}"

- name: "Deploy istiod"
  kubernetes.core.k8s:
    context: "{{ kubernetes_spices_istio_k8s_context }}"
    state: present
    src: "{{ kubernetes_spices_controlpane_manifest }}"

- name: "Get Control Plane Deployment"
  kubernetes.core.k8s_info:
    context: "{{ kubernetes_spices_istio_k8s_context }}"
    kind: Deployment
    namespace: "{{ kubernetes_spices_istio_namespace }}"
    label_selectors:
      - "operator.istio.io/component=Pilot"
      - "istio.io/rev={{ kubernetes_spices_istio_revision }}"
  register: cp_deployments
  until: cp_deployments.resources | length > 0
  retries: 18
  delay: 10

- name: "Wait for Istio Control Plane to be ready"
  include: utils/status_check.yml
  vars:
    deployment_name: "{{ kubernetes_spices_istio_cp_item.metadata.name }}"
    deployment_namespace: "{{ kubernetes_spices_istio_namespace }}"
    deployment_context: "{{ kubernetes_spices_istio_k8s_context }}"
  loop: "{{ cp_deployments.resources }}"
  loop_control:
     label: "{{ kubernetes_spices_istio_cp_item.metadata.name }}"
     loop_var: kubernetes_spices_istio_cp_item

- name: "Deploy Istio Ingress Gateway"
  kubernetes.core.k8s:
    context: "{{ kubernetes_spices_istio_k8s_context }}"
    state: present
    src: "{{ kubernetes_spices_gateways_manifest }}"

- name: "Get Gateway Deployment"
  kubernetes.core.k8s_info:
    context: "{{ kubernetes_spices_istio_k8s_context }}"
    kind: Deployment
    namespace: "{{ kubernetes_spices_istio_gateways_namespace }}"
    label_selectors:
      - "operator.istio.io/component=IngressGateways"
      - "istio.io/rev={{ kubernetes_spices_istio_revision }}"
  register: gw_deployments
  until: gw_deployments.resources | length > 0
  retries: 18
  delay: 10
     
- name: "Wait for Istio Gateweays to be ready"
  include: utils/status_check.yml
  vars:
    deployment_name: "{{ kubernetes_spices_istio_gw_item.metadata.name }}"
    deployment_namespace: "{{ kubernetes_spices_istio_gateways_namespace }}"
    deployment_context: "{{ kubernetes_spices_istio_k8s_context }}"
  loop: "{{ gw_deployments.resources }}"
  loop_control:
     label: "{{ kubernetes_spices_istio_gw_item.metadata.name }}"
     loop_var: kubernetes_spices_istio_gw_item
