name: Build Dev EE Image

on: [push]

env:
  CONTAINER_REGISTRY: ghcr.io/kameshsampath
  IMAGE_NAME: kubernetes-spices-ansible-runner
  GHCR_USERNAME: kameshsampath
  IMAGE_TAGS: latest
  CONTAINER_RUNTIME: docker

jobs:
  build-dev-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.8
    steps:
      #      - name: "Dump GitHub Context"
      #        env:
      #          GITHUB_CONTEXT: "${{ toJson(github) }}"
      #        run: |
      #          echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
        with:
          ref: "${{ github.event.ref }}"

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Log in to Registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Create the Ansible EE Image File
        id: create-image
        run: |
          poetry env use python
          poetry run ansible-builder create --output-filename Dockerfile
        working-directory: "${{ github.workspace }}/builder-ee"

      - name: Build nsible EE Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.GHCR_USERNAME }}/{{ env.IMAGE_NAME }}
          tags: latest ${{ github.sha }}
          dockerfiles: |
            ${{ github.workspace }}/builder-ee/Dockerfile

      - name: Push To ghcr.io
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: "${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}
